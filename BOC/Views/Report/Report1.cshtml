
@{
    ViewData["Title"] = "Report1";
    Layout = "~/Views/Shared/_DeskTop.cshtml";
}


@using BOC.Models;

@model ReportModel;

<style>
    fieldset.scheduler-border {
        border: 1px groove #ddd !important;
        padding: 0 1.4em 1.4em 1.4em !important;
        margin: 0 0 1.5em 0 !important;
        -webkit-box-shadow: 0px 0px 0px 0px #000;
        box-shadow: 0px 0px 0px 0px #000;
    }

    legend.scheduler-border {
        font-size: 1.2em !important;
        font-weight: bold !important;
        text-align: left !important;
        width: auto;
        padding: 0 10px;
        border-bottom: none;
    }
    .dx-scrollable {
    width:auto!important;
}
</style>

<form method="post" style="padding-left:20px;" enctype="multipart/form-data" class="my-login-validation" novalidate="" asp-controller="Report" asp-action="Report1">
    <br />
    <br />
    <fieldset class="scheduler-border">
        <legend class="scheduler-border">PERIOD</legend>
        <div class="row">
            <div class="col-1">
                <h1>1.</h1>
            </div>
            <div class="col">
                FromDate: @Html.TextBoxFor(model => model.FromDate1, new { placeholder = "mm/dd/yyyy", id = "datepickerfrom1", @class = "form-control" })
            </div>
            <div class="col">
                ToDate: @Html.TextBoxFor(model => model.ToDate1, new { placeholder = "mm/dd/yyyy", id = "datepickerto1", @class = "form-control" })
            </div>
        </div>
        <div class="row">
            <div class="col-1">
                <h1>2.</h1>
            </div>
            <div class="col">
                FromDate: @Html.TextBoxFor(model => model.FromDate2, new { placeholder = "mm/dd/yyyy", id = "datepickerfrom2", @class = "form-control" })
            </div>
            <div class="col">
                ToDate:  @Html.TextBoxFor(model => model.ToDate2, new { placeholder = "mm/dd/yyyy", id = "datepickerto2", @class = "form-control" })
            </div>
        </div>
    </fieldset>
    <input type="submit" value="OK" class="btn btn-primary" />
</form>

<br />


@if (Model != null)
{
<input type="hidden" id="error" value="@Model.ErrorMessage" />
    if (ViewData["FromDate1"] != null && ViewData["ToDate1"] != null && ViewData["FromDate2"] != null && ViewData["ToDate2"] != null)
    {
@(Html.DevExtreme().DataGrid<BOC.Models.RPT>()
                        .DataSource(ds => ds.Mvc()
                        .Controller("Report1_Api")
                        .LoadAction("Get")
                        .LoadParams(new { fromdate1 = @ViewData["FromDate1"], todate1 = @ViewData["ToDate1"], fromdate2 = @ViewData["FromDate2"], todate2 = @ViewData["ToDate2"] }))
                        .Columns(columns =>
                        {

                        columns.AddFor(m => m.ID).Caption("No").Width(50).Fixed(true);

                        columns.AddFor(m => m.Station).Width(100).Fixed(true);

                        columns.AddFor(m => m.FltKy1).Width(70).Alignment(HorizontalAlignment.Center)
                        .Format(Format.FixedPoint)
                        .EditorOptions(new { format = "0,###" });

                        columns.AddFor(m => m.FltKy2).Width(70).Alignment(HorizontalAlignment.Center)
                        .Format(Format.FixedPoint)
                        .EditorOptions(new { format = "0,###" });

                        columns.AddFor(m => m.PaxC_Ky1).Width(80).Alignment(HorizontalAlignment.Center)
                        .Format(Format.FixedPoint)
                        .EditorOptions(new { format = "0,###" });

                        columns.AddFor(m => m.PaxC_Ky2).Width(80).Alignment(HorizontalAlignment.Center)
                        .Format(Format.FixedPoint)
                        .EditorOptions(new { format = "0,###" });

                        columns.AddFor(m => m.PaxY_Ky1).Width(80).Alignment(HorizontalAlignment.Center)
                        .Format(Format.FixedPoint)
                        .EditorOptions(new { format = "0,###" });

                        columns.AddFor(m => m.PaxY_Ky2).Width(80).Alignment(HorizontalAlignment.Center)
                        .Format(Format.FixedPoint)
                        .EditorOptions(new { format = "0,###" });

                        columns.AddFor(m => m.Config_Ky1).Width(100).Alignment(HorizontalAlignment.Center)
                        .Format(Format.FixedPoint)
                        .EditorOptions(new { format = "0,###" });

                        columns.AddFor(m => m.Config_Ky2).Width(100).Alignment(HorizontalAlignment.Center)
                        .Format(Format.FixedPoint)
                        .EditorOptions(new { format = "0,###" });

                        columns.AddFor(m => m.Tong_Ky1).Width(90).Alignment(HorizontalAlignment.Center)
                        .Format(Format.FixedPoint)
                        .EditorOptions(new { format = "0,###" });

                        columns.AddFor(m => m.Tong_Ky2).Width(90).Alignment(HorizontalAlignment.Center)
                        .Format(Format.FixedPoint)
                        .EditorOptions(new { format = "0,###" });

                        columns.AddFor(m => m.Load_Factor1).Width(50).HeaderCellTemplate(@<text>
                                <div id='tooltiptarget1'>LF1</div>
                            </text>);

                            columns.AddFor(m => m.Load_Factor2).Width(50).HeaderCellTemplate(@<text>
                                <div id='tooltiptarget2'>LF2</div>
                            </text>);

                            columns.AddFor(m => m.AirportName).Caption("Airport Name").Width(300);
                        })

                        .Width("100%")
                        .Paging(p => p.PageSize(10))
                        .ShowBorders(true)
                        .ShowColumnLines(true)
                        .ShowRowLines(true)
                        .WordWrapEnabled(true)
                        .AllowColumnResizing(true)
                        .FilterRow(f => f.Visible(true))
                        .HeaderFilter(f => f.Visible(false))
                        .GroupPanel(p => p.Visible(true))
                        .Grouping(g => g.AutoExpandAll(false))
                        .RemoteOperations(true)
                        .GroupPanel(z => z.AllowColumnDragging(false))
                        .Pager(pager =>
                        {
                            pager.ShowPageSizeSelector(true);
                            pager.AllowedPageSizes(new[] { 10, 20, 50 });
                            pager.ShowInfo(true);
                        })
                                .Summary(s => s.TotalItems(totalItems =>
                                {
                                    totalItems.AddFor(m => m.Station).SummaryType(SummaryType.Count).ShowInColumn("Station").ValueFormat("0,###").DisplayFormat("{0}");
                                    totalItems.AddFor(m => m.FltKy1).SummaryType(SummaryType.Sum).ShowInColumn("FltKy1").ValueFormat("0,###").DisplayFormat("{0}");
                                    totalItems.AddFor(m => m.FltKy2).SummaryType(SummaryType.Sum).ShowInColumn("FltKy2").ValueFormat("0,###").DisplayFormat("{0}");
                                    totalItems.AddFor(m => m.PaxC_Ky1).SummaryType(SummaryType.Sum).ShowInColumn("PaxC_Ky1").ValueFormat("0,###").DisplayFormat("{0}");
                                    totalItems.AddFor(m => m.PaxC_Ky2).SummaryType(SummaryType.Sum).ShowInColumn("PaxC_Ky2").ValueFormat("0,###").DisplayFormat("{0}");
                                    totalItems.AddFor(m => m.PaxY_Ky1).SummaryType(SummaryType.Sum).ShowInColumn("PaxY_Ky1").ValueFormat("0,###").DisplayFormat("{0}");
                                    totalItems.AddFor(m => m.PaxY_Ky2).SummaryType(SummaryType.Sum).ShowInColumn("PaxY_Ky2").ValueFormat("0,###").DisplayFormat("{0}");
                                    totalItems.AddFor(m => m.Tong_Ky1).SummaryType(SummaryType.Sum).ShowInColumn("Tong_Ky1").ValueFormat("0,###").DisplayFormat("{0}");
                                    totalItems.AddFor(m => m.Tong_Ky2).SummaryType(SummaryType.Sum).ShowInColumn("Tong_Ky2").ValueFormat("0,###").DisplayFormat("{0}");
                                    totalItems.AddFor(m => m.Config_Ky1).SummaryType(SummaryType.Sum).ShowInColumn("Config_Ky1").ValueFormat("0,###").DisplayFormat("{0}");
                                    totalItems.AddFor(m => m.Config_Ky2).SummaryType(SummaryType.Sum).ShowInColumn("Config_Ky2").ValueFormat("0,###").DisplayFormat("{0}");
                                })
                                )
                   )

@(Html.DevExtreme().Tooltip()
                            .Target("#tooltiptarget1")
                            .ShowEvent("mouseenter")
                            .HideEvent("mouseleave")
                            .ContentTemplate("Load Factor 1")
                            )

@(Html.DevExtreme().Tooltip()
                            .Target("#tooltiptarget2")
                            .ShowEvent("mouseenter")
                            .HideEvent("mouseleave")
                            .ContentTemplate("Load Factor 2")
                            )


    }

}



<script src="~/js/bootstrap-datepicker.min.js"></script>

<script>
    //Set Default Date From Rules
    var today = new Date();
    var days = 86400000; //number of milliseconds in a day
    var fromdate1 = new Date(today - (8 * days));
    var todate1 = new Date(today - (1 * days));
    var fromdate2 = new Date(today - (16 * days));
    var todate2 = new Date(today - (9 * days));
    var fd1 = @(Newtonsoft.Json.JsonConvert.SerializeObject(ViewData["FromDate1"]));
    var td1 = @(Newtonsoft.Json.JsonConvert.SerializeObject(ViewData["ToDate1"]));
    var fd2 = @(Newtonsoft.Json.JsonConvert.SerializeObject(ViewData["FromDate2"]));
    var td2 = @(Newtonsoft.Json.JsonConvert.SerializeObject(ViewData["ToDate2"]));

    $('#datepickerfrom1').datepicker({
        weekStart: 1,
        daysOfWeekHighlighted: "6,0",
        autoclose: true,
        todayHighlight: true,
        format: 'dd/mm/yyyy',

    });

    if (fd1 == null) {
        $('#datepickerfrom1').datepicker("setDate", fromdate1);
    }
    else {
        $('#datepickerfrom1').datepicker("setDate", new Date(fd1));
    }


    $('#datepickerto1').datepicker({
        weekStart: 1,
        daysOfWeekHighlighted: "6,0",
        autoclose: true,
        todayHighlight: true,
        format: 'dd/mm/yyyy'
    });
    if (td1 == null) {
        $('#datepickerto1').datepicker("setDate", todate1);
    }
    else {
        $('#datepickerto1').datepicker("setDate", new Date(td1));
    }



    $('#datepickerfrom2').datepicker({
        weekStart: 1,
        daysOfWeekHighlighted: "6,0",
        autoclose: true,
        todayHighlight: true,
        format: 'dd/mm/yyyy'
    });
    if (fd2 == null) {
        $('#datepickerfrom2').datepicker("setDate", fromdate2);
    }
    else {
        $('#datepickerfrom2').datepicker("setDate", new Date(fd2));
    }

    $('#datepickerto2').datepicker({
        weekStart: 1,
        daysOfWeekHighlighted: "6,0",
        autoclose: true,
        todayHighlight: true,
        format: 'dd/mm/yyyy'
    });
    if (td2 == null) {
        $('#datepickerto2').datepicker("setDate", todate2);
    }
    else {
        $('#datepickerto2').datepicker("setDate", new Date(td2));
    }


</script>
<script type="text/javascript">
    $(function () {
        if ($("#error").val() !== "") {
            alertify.alert($("#error").val());
        }

        $("#datepickerfrom1").datepicker({
            weekStart: 1,
            daysOfWeekHighlighted: "6,0",
            autoclose: true,
            todayHighlight: true,
            format: 'dd/mm/yyyy'
        });
        $("#datepickerto1").datepicker({
            weekStart: 1,
            daysOfWeekHighlighted: "6,0",
            autoclose: true,
            todayHighlight: true,
            format: 'dd/mm/yyyy'});
        $("#datepickerfrom2").datepicker({
            weekStart: 1,
            daysOfWeekHighlighted: "6,0",
            autoclose: true,
            todayHighlight: true,
            format: 'dd/mm/yyyy'});
        $("#datepickerto2").datepicker({
            weekStart: 1,
            daysOfWeekHighlighted: "6,0",
            autoclose: true,
            todayHighlight: true,
            format: 'dd/mm/yyyy'});

    })

</script>



